
//------------------------------------------------------------------------------
// 
//     This code was generated by a SAP. NET Connector Proxy Generator Version 2.0
//     Created at 8/29/2009
//     Created from Windows
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// 
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections;
using System.Runtime.InteropServices;
using System.Xml.Serialization;
using System.Xml.Schema;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using SAP.Connector;

namespace CSAPData
{

  /// <summary>
  /// BAPI Structure for MAterial Component in Network Activity
  /// </summary>
  [RfcStructure(AbapName ="BAPI_COMPONENT_EXP" , Length = 580, Length2 = 1100)]
  [Serializable]
  public class BAPI_COMPONENT_EXP : SAPStructure
  {
   

    /// <summary>
    /// Unique number for a material component in the client
    /// </summary>
 
    [RfcField(AbapName = "COMPONENT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 15, Length2 = 30, Offset = 0, Offset2 = 0)]
    [XmlElement("COMPONENT", Form=XmlSchemaForm.Unqualified)]
    public string Component
    { 
       get
       {
          return _Component;
       }
       set
       {
          _Component = value;
       }
    }
    private string _Component;


    /// <summary>
    /// Activity number in network and standard network
    /// </summary>
 
    [RfcField(AbapName = "ACTIVITY", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 4, Length2 = 8, Offset = 15, Offset2 = 30)]
    [XmlElement("ACTIVITY", Form=XmlSchemaForm.Unqualified)]
    public string Activity
    { 
       get
       {
          return _Activity;
       }
       set
       {
          _Activity = value;
       }
    }
    private string _Activity;


    /// <summary>
    /// Network number
    /// </summary>
 
    [RfcField(AbapName = "NETWORK", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 12, Length2 = 24, Offset = 19, Offset2 = 38)]
    [XmlElement("NETWORK", Form=XmlSchemaForm.Unqualified)]
    public string Network
    { 
       get
       {
          return _Network;
       }
       set
       {
          _Network = value;
       }
    }
    private string _Network;


    /// <summary>
    /// Item Number of Principal Purchase Agreement
    /// </summary>
 
    [RfcField(AbapName = "AGMT_ITEM", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 5, Length2 = 10, Offset = 31, Offset2 = 62)]
    [XmlElement("AGMT_ITEM", Form=XmlSchemaForm.Unqualified)]
    public string Agmt_Item
    { 
       get
       {
          return _Agmt_Item;
       }
       set
       {
          _Agmt_Item = value;
       }
    }
    private string _Agmt_Item;


    /// <summary>
    /// Number of Principal Purchase Agreement
    /// </summary>
 
    [RfcField(AbapName = "AGREEMENT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 36, Offset2 = 72)]
    [XmlElement("AGREEMENT", Form=XmlSchemaForm.Unqualified)]
    public string Agreement
    { 
       get
       {
          return _Agreement;
       }
       set
       {
          _Agreement = value;
       }
    }
    private string _Agreement;


    /// <summary>
    /// Indicator: Backflush
    /// </summary>
 
    [RfcField(AbapName = "BACKFLUSH", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 46, Offset2 = 92)]
    [XmlElement("BACKFLUSH", Form=XmlSchemaForm.Unqualified)]
    public string Backflush
    { 
       get
       {
          return _Backflush;
       }
       set
       {
          _Backflush = value;
       }
    }
    private string _Backflush;


    /// <summary>
    /// Base Unit of Measure
    /// </summary>
 
    [RfcField(AbapName = "BASE_UOM", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 47, Offset2 = 94)]
    [XmlElement("BASE_UOM", Form=XmlSchemaForm.Unqualified)]
    public string Base_Uom
    { 
       get
       {
          return _Base_Uom;
       }
       set
       {
          _Base_Uom = value;
       }
    }
    private string _Base_Uom;


    /// <summary>
    /// ISO code for unit of measurement
    /// </summary>
 
    [RfcField(AbapName = "BASE_UOM_ISO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 50, Offset2 = 100)]
    [XmlElement("BASE_UOM_ISO", Form=XmlSchemaForm.Unqualified)]
    public string Base_Uom_Iso
    { 
       get
       {
          return _Base_Uom_Iso;
       }
       set
       {
          _Base_Uom_Iso = value;
       }
    }
    private string _Base_Uom_Iso;


    /// <summary>
    /// Batch Number
    /// </summary>
 
    [RfcField(AbapName = "BATCH", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 53, Offset2 = 106)]
    [XmlElement("BATCH", Form=XmlSchemaForm.Unqualified)]
    public string Batch
    { 
       get
       {
          return _Batch;
       }
       set
       {
          _Batch = value;
       }
    }
    private string _Batch;


    /// <summary>
    /// Indicator: Bulk Material
    /// </summary>
 
    [RfcField(AbapName = "BULK_MAT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 63, Offset2 = 126)]
    [XmlElement("BULK_MAT", Form=XmlSchemaForm.Unqualified)]
    public string Bulk_Mat
    { 
       get
       {
          return _Bulk_Mat;
       }
       set
       {
          _Bulk_Mat = value;
       }
    }
    private string _Bulk_Mat;


    /// <summary>
    /// Committed quantity
    /// </summary>
 
    [RfcField(AbapName = "COMMITED_QUAN", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 7, Length2 = 7, Decimals = 3, Offset = 64, Offset2 = 128)]
    [XmlElement("COMMITED_QUAN", Form=XmlSchemaForm.Unqualified)]
    public Decimal Commited_Quan
    { 
       get
       {
          return _Commited_Quan;
       }
       set
       {
          _Commited_Quan = value;
       }
    }
    private Decimal _Commited_Quan;


    /// <summary>
    /// Indicator for Relevancy to Costing
    /// </summary>
 
    [RfcField(AbapName = "COST_RELEVANT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 71, Offset2 = 136)]
    [XmlElement("COST_RELEVANT", Form=XmlSchemaForm.Unqualified)]
    public string Cost_Relevant
    { 
       get
       {
          return _Cost_Relevant;
       }
       set
       {
          _Cost_Relevant = value;
       }
    }
    private string _Cost_Relevant;


    /// <summary>
    /// Currency Key
    /// </summary>
 
    [RfcField(AbapName = "CURRENCY", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 5, Length2 = 10, Offset = 72, Offset2 = 138)]
    [XmlElement("CURRENCY", Form=XmlSchemaForm.Unqualified)]
    public string Currency
    { 
       get
       {
          return _Currency;
       }
       set
       {
          _Currency = value;
       }
    }
    private string _Currency;


    /// <summary>
    /// ISO currency code
    /// </summary>
 
    [RfcField(AbapName = "CURRENCY_ISO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 77, Offset2 = 148)]
    [XmlElement("CURRENCY_ISO", Form=XmlSchemaForm.Unqualified)]
    public string Currency_Iso
    { 
       get
       {
          return _Currency_Iso;
       }
       set
       {
          _Currency_Iso = value;
       }
    }
    private string _Currency_Iso;


    /// <summary>
    /// Cutting measure 1
    /// </summary>
 
    [RfcField(AbapName = "CUTTING_MEASURE_1", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 7, Length2 = 7, Decimals = 3, Offset = 80, Offset2 = 154)]
    [XmlElement("CUTTING_MEASURE_1", Form=XmlSchemaForm.Unqualified)]
    public Decimal Cutting_Measure_1
    { 
       get
       {
          return _Cutting_Measure_1;
       }
       set
       {
          _Cutting_Measure_1 = value;
       }
    }
    private Decimal _Cutting_Measure_1;


    /// <summary>
    /// Cutting measure 2
    /// </summary>
 
    [RfcField(AbapName = "CUTTING_MEASURE_2", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 7, Length2 = 7, Decimals = 3, Offset = 87, Offset2 = 161)]
    [XmlElement("CUTTING_MEASURE_2", Form=XmlSchemaForm.Unqualified)]
    public Decimal Cutting_Measure_2
    { 
       get
       {
          return _Cutting_Measure_2;
       }
       set
       {
          _Cutting_Measure_2 = value;
       }
    }
    private Decimal _Cutting_Measure_2;


    /// <summary>
    /// Cutting measure 3
    /// </summary>
 
    [RfcField(AbapName = "CUTTING_MEASURE_3", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 7, Length2 = 7, Decimals = 3, Offset = 94, Offset2 = 168)]
    [XmlElement("CUTTING_MEASURE_3", Form=XmlSchemaForm.Unqualified)]
    public Decimal Cutting_Measure_3
    { 
       get
       {
          return _Cutting_Measure_3;
       }
       set
       {
          _Cutting_Measure_3 = value;
       }
    }
    private Decimal _Cutting_Measure_3;


    /// <summary>
    /// Integral divisor for cutting measures
    /// </summary>
 
    [RfcField(AbapName = "CUTTING_MEASURE_DIVISOR", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 5, Length2 = 10, Offset = 101, Offset2 = 176)]
    [XmlElement("CUTTING_MEASURE_DIVISOR", Form=XmlSchemaForm.Unqualified)]
    public string Cutting_Measure_Divisor
    { 
       get
       {
          return _Cutting_Measure_Divisor;
       }
       set
       {
          _Cutting_Measure_Divisor = value;
       }
    }
    private string _Cutting_Measure_Divisor;


    /// <summary>
    /// Unit for cutting measures
    /// </summary>
 
    [RfcField(AbapName = "CUTTING_MEASURE_UNIT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 106, Offset2 = 186)]
    [XmlElement("CUTTING_MEASURE_UNIT", Form=XmlSchemaForm.Unqualified)]
    public string Cutting_Measure_Unit
    { 
       get
       {
          return _Cutting_Measure_Unit;
       }
       set
       {
          _Cutting_Measure_Unit = value;
       }
    }
    private string _Cutting_Measure_Unit;


    /// <summary>
    /// ISO code for unit of measurement
    /// </summary>
 
    [RfcField(AbapName = "CUTTING_MEASURE_UNIT_ISO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 109, Offset2 = 192)]
    [XmlElement("CUTTING_MEASURE_UNIT_ISO", Form=XmlSchemaForm.Unqualified)]
    public string Cutting_Measure_Unit_Iso
    { 
       get
       {
          return _Cutting_Measure_Unit_Iso;
       }
       set
       {
          _Cutting_Measure_Unit_Iso = value;
       }
    }
    private string _Cutting_Measure_Unit_Iso;


    /// <summary>
    /// Deletion Indicator
    /// </summary>
 
    [RfcField(AbapName = "DELETION_FLAG", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 112, Offset2 = 198)]
    [XmlElement("DELETION_FLAG", Form=XmlSchemaForm.Unqualified)]
    public string Deletion_Flag
    { 
       get
       {
          return _Deletion_Flag;
       }
       set
       {
          _Deletion_Flag = value;
       }
    }
    private string _Deletion_Flag;


    /// <summary>
    /// Delivery time in days
    /// </summary>
 
    [RfcField(AbapName = "DELIVERY_DAYS", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 2, Length2 = 2, Offset = 113, Offset2 = 200)]
    [XmlElement("DELIVERY_DAYS", Form=XmlSchemaForm.Unqualified)]
    public Decimal Delivery_Days
    { 
       get
       {
          return _Delivery_Days;
       }
       set
       {
          _Delivery_Days = value;
       }
    }
    private Decimal _Delivery_Days;


    /// <summary>
    /// Requirement quantity of the component
    /// </summary>
 
    [RfcField(AbapName = "ENTRY_QUANTITY", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 7, Length2 = 7, Decimals = 3, Offset = 115, Offset2 = 202)]
    [XmlElement("ENTRY_QUANTITY", Form=XmlSchemaForm.Unqualified)]
    public Decimal Entry_Quantity
    { 
       get
       {
          return _Entry_Quantity;
       }
       set
       {
          _Entry_Quantity = value;
       }
    }
    private Decimal _Entry_Quantity;


    /// <summary>
    /// Final Issue for This Reservation
    /// </summary>
 
    [RfcField(AbapName = "FINAL_ISSUE", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 122, Offset2 = 210)]
    [XmlElement("FINAL_ISSUE", Form=XmlSchemaForm.Unqualified)]
    public string Final_Issue
    { 
       get
       {
          return _Final_Issue;
       }
       set
       {
          _Final_Issue = value;
       }
    }
    private string _Final_Issue;


    /// <summary>
    /// G/L Account Number
    /// </summary>
 
    [RfcField(AbapName = "GL_ACCOUNT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 123, Offset2 = 212)]
    [XmlElement("GL_ACCOUNT", Form=XmlSchemaForm.Unqualified)]
    public string Gl_Account
    { 
       get
       {
          return _Gl_Account;
       }
       set
       {
          _Gl_Account = value;
       }
    }
    private string _Gl_Account;


    /// <summary>
    /// Quantity of Goods Received
    /// </summary>
 
    [RfcField(AbapName = "GOODS_RECEIVED_QUAN", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 7, Length2 = 7, Decimals = 3, Offset = 133, Offset2 = 232)]
    [XmlElement("GOODS_RECEIVED_QUAN", Form=XmlSchemaForm.Unqualified)]
    public Decimal Goods_Received_Quan
    { 
       get
       {
          return _Goods_Received_Quan;
       }
       set
       {
          _Goods_Received_Quan = value;
       }
    }
    private Decimal _Goods_Received_Quan;


    /// <summary>
    /// Purchase Order Unit of Measure
    /// </summary>
 
    [RfcField(AbapName = "GOODS_RECEIVED_QUAN_UNIT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 140, Offset2 = 240)]
    [XmlElement("GOODS_RECEIVED_QUAN_UNIT", Form=XmlSchemaForm.Unqualified)]
    public string Goods_Received_Quan_Unit
    { 
       get
       {
          return _Goods_Received_Quan_Unit;
       }
       set
       {
          _Goods_Received_Quan_Unit = value;
       }
    }
    private string _Goods_Received_Quan_Unit;


    /// <summary>
    /// ISO code for unit of measurement
    /// </summary>
 
    [RfcField(AbapName = "GOODS_RECEIVED_QUAN_UNIT_ISO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 143, Offset2 = 246)]
    [XmlElement("GOODS_RECEIVED_QUAN_UNIT_ISO", Form=XmlSchemaForm.Unqualified)]
    public string Goods_Received_Quan_Unit_Iso
    { 
       get
       {
          return _Goods_Received_Quan_Unit_Iso;
       }
       set
       {
          _Goods_Received_Quan_Unit_Iso = value;
       }
    }
    private string _Goods_Received_Quan_Unit_Iso;


    /// <summary>
    /// Goods Receipt Processing Time in Days
    /// </summary>
 
    [RfcField(AbapName = "GR_PR_TIME", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 2, Length2 = 2, Offset = 146, Offset2 = 252)]
    [XmlElement("GR_PR_TIME", Form=XmlSchemaForm.Unqualified)]
    public Decimal Gr_Pr_Time
    { 
       get
       {
          return _Gr_Pr_Time;
       }
       set
       {
          _Gr_Pr_Time = value;
       }
    }
    private Decimal _Gr_Pr_Time;


    /// <summary>
    /// Goods Recipient/Ship-To Party
    /// </summary>
 
    [RfcField(AbapName = "GR_RCPT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 12, Length2 = 24, Offset = 148, Offset2 = 254)]
    [XmlElement("GR_RCPT", Form=XmlSchemaForm.Unqualified)]
    public string Gr_Rcpt
    { 
       get
       {
          return _Gr_Rcpt;
       }
       set
       {
          _Gr_Rcpt = value;
       }
    }
    private string _Gr_Rcpt;


    /// <summary>
    /// Number of Purchasing Info Record
    /// </summary>
 
    [RfcField(AbapName = "INFO_REC", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 160, Offset2 = 278)]
    [XmlElement("INFO_REC", Form=XmlSchemaForm.Unqualified)]
    public string Info_Rec
    { 
       get
       {
          return _Info_Rec;
       }
       set
       {
          _Info_Rec = value;
       }
    }
    private string _Info_Rec;


    /// <summary>
    /// Item Category (Bill of Material)
    /// </summary>
 
    [RfcField(AbapName = "ITEM_CAT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 170, Offset2 = 298)]
    [XmlElement("ITEM_CAT", Form=XmlSchemaForm.Unqualified)]
    public string Item_Cat
    { 
       get
       {
          return _Item_Cat;
       }
       set
       {
          _Item_Cat = value;
       }
    }
    private string _Item_Cat;


    /// <summary>
    /// BOM item number
    /// </summary>
 
    [RfcField(AbapName = "ITEM_NUMBER", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 4, Length2 = 8, Offset = 171, Offset2 = 300)]
    [XmlElement("ITEM_NUMBER", Form=XmlSchemaForm.Unqualified)]
    public string Item_Number
    { 
       get
       {
          return _Item_Number;
       }
       set
       {
          _Item_Number = value;
       }
    }
    private string _Item_Number;


    /// <summary>
    /// BOM Item Text (Line 1)
    /// </summary>
 
    [RfcField(AbapName = "ITEM_TEXT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 40, Length2 = 80, Offset = 175, Offset2 = 308)]
    [XmlElement("ITEM_TEXT", Form=XmlSchemaForm.Unqualified)]
    public string Item_Text
    { 
       get
       {
          return _Item_Text;
       }
       set
       {
          _Item_Text = value;
       }
    }
    private string _Item_Text;


    /// <summary>
    /// Lead-time offset for operation
    /// </summary>
 
    [RfcField(AbapName = "LEAD_TIME_OFFSET_OPR", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 2, Length2 = 2, Offset = 215, Offset2 = 388)]
    [XmlElement("LEAD_TIME_OFFSET_OPR", Form=XmlSchemaForm.Unqualified)]
    public Decimal Lead_Time_Offset_Opr
    { 
       get
       {
          return _Lead_Time_Offset_Opr;
       }
       set
       {
          _Lead_Time_Offset_Opr = value;
       }
    }
    private Decimal _Lead_Time_Offset_Opr;


    /// <summary>
    /// Unit for lead-time offset for operation
    /// </summary>
 
    [RfcField(AbapName = "LEAD_TIME_OFFSET_OPR_UNIT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 217, Offset2 = 390)]
    [XmlElement("LEAD_TIME_OFFSET_OPR_UNIT", Form=XmlSchemaForm.Unqualified)]
    public string Lead_Time_Offset_Opr_Unit
    { 
       get
       {
          return _Lead_Time_Offset_Opr_Unit;
       }
       set
       {
          _Lead_Time_Offset_Opr_Unit = value;
       }
    }
    private string _Lead_Time_Offset_Opr_Unit;


    /// <summary>
    /// ISO code for unit of measurement
    /// </summary>
 
    [RfcField(AbapName = "LEAD_TIME_OFFSET_OPR_UNIT_ISO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 220, Offset2 = 396)]
    [XmlElement("LEAD_TIME_OFFSET_OPR_UNIT_ISO", Form=XmlSchemaForm.Unqualified)]
    public string Lead_Time_Offset_Opr_Unit_Iso
    { 
       get
       {
          return _Lead_Time_Offset_Opr_Unit_Iso;
       }
       set
       {
          _Lead_Time_Offset_Opr_Unit_Iso = value;
       }
    }
    private string _Lead_Time_Offset_Opr_Unit_Iso;


    /// <summary>
    /// Ind.: Enter requirement date manually
    /// </summary>
 
    [RfcField(AbapName = "MANUAL_REQUIREMENTS_DATE", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 223, Offset2 = 402)]
    [XmlElement("MANUAL_REQUIREMENTS_DATE", Form=XmlSchemaForm.Unqualified)]
    public string Manual_Requirements_Date
    { 
       get
       {
          return _Manual_Requirements_Date;
       }
       set
       {
          _Manual_Requirements_Date = value;
       }
    }
    private string _Manual_Requirements_Date;


    /// <summary>
    /// Material Number
    /// </summary>
 
    [RfcField(AbapName = "MATERIAL", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 18, Length2 = 36, Offset = 224, Offset2 = 404)]
    [XmlElement("MATERIAL", Form=XmlSchemaForm.Unqualified)]
    public string Material
    { 
       get
       {
          return _Material;
       }
       set
       {
          _Material = value;
       }
    }
    private string _Material;


    /// <summary>
    /// Material Description (Short Text)
    /// </summary>
 
    [RfcField(AbapName = "MATL_DESC", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 40, Length2 = 80, Offset = 242, Offset2 = 440)]
    [XmlElement("MATL_DESC", Form=XmlSchemaForm.Unqualified)]
    public string Matl_Desc
    { 
       get
       {
          return _Matl_Desc;
       }
       set
       {
          _Matl_Desc = value;
       }
    }
    private string _Matl_Desc;


    /// <summary>
    /// Material Group
    /// </summary>
 
    [RfcField(AbapName = "MATL_GROUP", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 9, Length2 = 18, Offset = 282, Offset2 = 520)]
    [XmlElement("MATL_GROUP", Form=XmlSchemaForm.Unqualified)]
    public string Matl_Group
    { 
       get
       {
          return _Matl_Group;
       }
       set
       {
          _Matl_Group = value;
       }
    }
    private string _Matl_Group;


    /// <summary>
    /// Movement Type (Inventory Management)
    /// </summary>
 
    [RfcField(AbapName = "MOVE_TYPE", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 291, Offset2 = 538)]
    [XmlElement("MOVE_TYPE", Form=XmlSchemaForm.Unqualified)]
    public string Move_Type
    { 
       get
       {
          return _Move_Type;
       }
       set
       {
          _Move_Type = value;
       }
    }
    private string _Move_Type;


    /// <summary>
    /// Reservation Relevance/Generation of Purchase Requisition
    /// </summary>
 
    [RfcField(AbapName = "MRP_RELEVANT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 294, Offset2 = 544)]
    [XmlElement("MRP_RELEVANT", Form=XmlSchemaForm.Unqualified)]
    public string Mrp_Relevant
    { 
       get
       {
          return _Mrp_Relevant;
       }
       set
       {
          _Mrp_Relevant = value;
       }
    }
    private string _Mrp_Relevant;


    /// <summary>
    /// Phantom item indicator
    /// </summary>
 
    [RfcField(AbapName = "PHANT_ITEM", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 295, Offset2 = 546)]
    [XmlElement("PHANT_ITEM", Form=XmlSchemaForm.Unqualified)]
    public string Phant_Item
    { 
       get
       {
          return _Phant_Item;
       }
       set
       {
          _Phant_Item = value;
       }
    }
    private string _Phant_Item;


    /// <summary>
    /// Plant
    /// </summary>
 
    [RfcField(AbapName = "PLANT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 4, Length2 = 8, Offset = 296, Offset2 = 548)]
    [XmlElement("PLANT", Form=XmlSchemaForm.Unqualified)]
    public string Plant
    { 
       get
       {
          return _Plant;
       }
       set
       {
          _Plant = value;
       }
    }
    private string _Plant;


    /// <summary>
    /// Item Number of Purchase Requisition
    /// </summary>
 
    [RfcField(AbapName = "PREQ_ITEM", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 5, Length2 = 10, Offset = 300, Offset2 = 556)]
    [XmlElement("PREQ_ITEM", Form=XmlSchemaForm.Unqualified)]
    public string Preq_Item
    { 
       get
       {
          return _Preq_Item;
       }
       set
       {
          _Preq_Item = value;
       }
    }
    private string _Preq_Item;


    /// <summary>
    /// Name of Requisitioner/Requester
    /// </summary>
 
    [RfcField(AbapName = "PREQ_NAME", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 12, Length2 = 24, Offset = 305, Offset2 = 566)]
    [XmlElement("PREQ_NAME", Form=XmlSchemaForm.Unqualified)]
    public string Preq_Name
    { 
       get
       {
          return _Preq_Name;
       }
       set
       {
          _Preq_Name = value;
       }
    }
    private string _Preq_Name;


    /// <summary>
    /// Purchase Requisition Number
    /// </summary>
 
    [RfcField(AbapName = "PREQ_NO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 317, Offset2 = 590)]
    [XmlElement("PREQ_NO", Form=XmlSchemaForm.Unqualified)]
    public string Preq_No
    { 
       get
       {
          return _Preq_No;
       }
       set
       {
          _Preq_No = value;
       }
    }
    private string _Preq_No;


    /// <summary>
    /// Price in component currency
    /// </summary>
 
    [RfcField(AbapName = "PRICE", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 8, Length2 = 8, Decimals = 2, Offset = 327, Offset2 = 610)]
    [XmlElement("PRICE", Form=XmlSchemaForm.Unqualified)]
    public Decimal Price
    { 
       get
       {
          return _Price;
       }
       set
       {
          _Price = value;
       }
    }
    private Decimal _Price;


    /// <summary>
    /// Price Unit
    /// </summary>
 
    [RfcField(AbapName = "PRICE_UNIT", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 3, Length2 = 3, Offset = 335, Offset2 = 618)]
    [XmlElement("PRICE_UNIT", Form=XmlSchemaForm.Unqualified)]
    public Decimal Price_Unit
    { 
       get
       {
          return _Price_Unit;
       }
       set
       {
          _Price_Unit = value;
       }
    }
    private Decimal _Price_Unit;


    /// <summary>
    /// PS text description
    /// </summary>
 
    [RfcField(AbapName = "PS_TEXT_DESCRIPTION", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 20, Length2 = 40, Offset = 338, Offset2 = 622)]
    [XmlElement("PS_TEXT_DESCRIPTION", Form=XmlSchemaForm.Unqualified)]
    public string Ps_Text_Description
    { 
       get
       {
          return _Ps_Text_Description;
       }
       set
       {
          _Ps_Text_Description = value;
       }
    }
    private string _Ps_Text_Description;


    /// <summary>
    /// Type of PS text to be copied into the purchase requisition
    /// </summary>
 
    [RfcField(AbapName = "PS_TEXT_TYPE", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 2, Length2 = 4, Offset = 358, Offset2 = 662)]
    [XmlElement("PS_TEXT_TYPE", Form=XmlSchemaForm.Unqualified)]
    public string Ps_Text_Type
    { 
       get
       {
          return _Ps_Text_Type;
       }
       set
       {
          _Ps_Text_Type = value;
       }
    }
    private string _Ps_Text_Type;


    /// <summary>
    /// Purchasing Group
    /// </summary>
 
    [RfcField(AbapName = "PUR_GROUP", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 360, Offset2 = 666)]
    [XmlElement("PUR_GROUP", Form=XmlSchemaForm.Unqualified)]
    public string Pur_Group
    { 
       get
       {
          return _Pur_Group;
       }
       set
       {
          _Pur_Group = value;
       }
    }
    private string _Pur_Group;


    /// <summary>
    /// Indicator: Purchasing info record data are fixed
    /// </summary>
 
    [RfcField(AbapName = "PUR_INFO_RECORD_DATA_FIXED", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 363, Offset2 = 672)]
    [XmlElement("PUR_INFO_RECORD_DATA_FIXED", Form=XmlSchemaForm.Unqualified)]
    public string Pur_Info_Record_Data_Fixed
    { 
       get
       {
          return _Pur_Info_Record_Data_Fixed;
       }
       set
       {
          _Pur_Info_Record_Data_Fixed = value;
       }
    }
    private string _Pur_Info_Record_Data_Fixed;


    /// <summary>
    /// Purchasing Organization
    /// </summary>
 
    [RfcField(AbapName = "PURCH_ORG", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 4, Length2 = 8, Offset = 364, Offset2 = 674)]
    [XmlElement("PURCH_ORG", Form=XmlSchemaForm.Unqualified)]
    public string Purch_Org
    { 
       get
       {
          return _Purch_Org;
       }
       set
       {
          _Purch_Org = value;
       }
    }
    private string _Purch_Org;


    /// <summary>
    /// Indicator: Purchase order exists
    /// </summary>
 
    [RfcField(AbapName = "PURCHASE_ORDER_EXISTS", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 368, Offset2 = 682)]
    [XmlElement("PURCHASE_ORDER_EXISTS", Form=XmlSchemaForm.Unqualified)]
    public string Purchase_Order_Exists
    { 
       get
       {
          return _Purchase_Order_Exists;
       }
       set
       {
          _Purchase_Order_Exists = value;
       }
    }
    private string _Purchase_Order_Exists;


    /// <summary>
    /// Requirement Date for the Component
    /// </summary>
 
    [RfcField(AbapName = "REQ_DATE", RfcType = RFCTYPE.RFCTYPE_DATE, Length = 8, Length2 = 16, Offset = 369, Offset2 = 684)]
    [XmlElement("REQ_DATE", Form=XmlSchemaForm.Unqualified)]
    public string Req_Date
    { 
       get
       {
          return _Req_Date;
       }
       set
       {
          _Req_Date = value;
       }
    }
    private string _Req_Date;


    /// <summary>
    /// Requirements Plan Number
    /// </summary>
 
    [RfcField(AbapName = "REQUIREMENTS_PLAN_NO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 377, Offset2 = 700)]
    [XmlElement("REQUIREMENTS_PLAN_NO", Form=XmlSchemaForm.Unqualified)]
    public string Requirements_Plan_No
    { 
       get
       {
          return _Requirements_Plan_No;
       }
       set
       {
          _Requirements_Plan_No = value;
       }
    }
    private string _Requirements_Plan_No;


    /// <summary>
    /// Item Number of Reservation/Dependent Requirement
    /// </summary>
 
    [RfcField(AbapName = "RES_ITEM", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 4, Length2 = 8, Offset = 387, Offset2 = 720)]
    [XmlElement("RES_ITEM", Form=XmlSchemaForm.Unqualified)]
    public string Res_Item
    { 
       get
       {
          return _Res_Item;
       }
       set
       {
          _Res_Item = value;
       }
    }
    private string _Res_Item;


    /// <summary>
    /// Number of Reservation/Dependent Requirement
    /// </summary>
 
    [RfcField(AbapName = "RESERV_NO", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 10, Length2 = 20, Offset = 391, Offset2 = 728)]
    [XmlElement("RESERV_NO", Form=XmlSchemaForm.Unqualified)]
    public string Reserv_No
    { 
       get
       {
          return _Reserv_No;
       }
       set
       {
          _Reserv_No = value;
       }
    }
    private string _Reserv_No;


    /// <summary>
    /// Item Number in Sales Order
    /// </summary>
 
    [RfcField(AbapName = "S_ORD_ITEM", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 6, Length2 = 12, Offset = 401, Offset2 = 748)]
    [XmlElement("S_ORD_ITEM", Form=XmlSchemaForm.Unqualified)]
    public string S_Ord_Item
    { 
       get
       {
          return _S_Ord_Item;
       }
       set
       {
          _S_Ord_Item = value;
       }
    }
    private string _S_Ord_Item;


    /// <summary>
    /// Sales Order Number
    /// </summary>
 
    [RfcField(AbapName = "SALES_ORD", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 407, Offset2 = 760)]
    [XmlElement("SALES_ORD", Form=XmlSchemaForm.Unqualified)]
    public string Sales_Ord
    { 
       get
       {
          return _Sales_Ord;
       }
       set
       {
          _Sales_Ord = value;
       }
    }
    private string _Sales_Ord;


    /// <summary>
    /// Sort String
    /// </summary>
 
    [RfcField(AbapName = "SORT_STRING", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 417, Offset2 = 780)]
    [XmlElement("SORT_STRING", Form=XmlSchemaForm.Unqualified)]
    public string Sort_String
    { 
       get
       {
          return _Sort_String;
       }
       set
       {
          _Sort_String = value;
       }
    }
    private string _Sort_String;


    /// <summary>
    /// Special stock indicator for dialog display
    /// </summary>
 
    [RfcField(AbapName = "SPECIAL_STOCK", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 1, Length2 = 2, Offset = 427, Offset2 = 800)]
    [XmlElement("SPECIAL_STOCK", Form=XmlSchemaForm.Unqualified)]
    public string Special_Stock
    { 
       get
       {
          return _Special_Stock;
       }
       set
       {
          _Special_Stock = value;
       }
    }
    private string _Special_Stock;


    /// <summary>
    /// Storage Location
    /// </summary>
 
    [RfcField(AbapName = "STGE_LOC", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 4, Length2 = 8, Offset = 428, Offset2 = 802)]
    [XmlElement("STGE_LOC", Form=XmlSchemaForm.Unqualified)]
    public string Stge_Loc
    { 
       get
       {
          return _Stge_Loc;
       }
       set
       {
          _Stge_Loc = value;
       }
    }
    private string _Stge_Loc;


    /// <summary>
    /// Requirement Tracking Number
    /// </summary>
 
    [RfcField(AbapName = "TRACKINGNO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 432, Offset2 = 810)]
    [XmlElement("TRACKINGNO", Form=XmlSchemaForm.Unqualified)]
    public string Trackingno
    { 
       get
       {
          return _Trackingno;
       }
       set
       {
          _Trackingno = value;
       }
    }
    private string _Trackingno;


    /// <summary>
    /// Unloading Point
    /// </summary>
 
    [RfcField(AbapName = "UNLOAD_PT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 25, Length2 = 50, Offset = 442, Offset2 = 830)]
    [XmlElement("UNLOAD_PT", Form=XmlSchemaForm.Unqualified)]
    public string Unload_Pt
    { 
       get
       {
          return _Unload_Pt;
       }
       set
       {
          _Unload_Pt = value;
       }
    }
    private string _Unload_Pt;


    /// <summary>
    /// Unit of measure for variable-size component
    /// </summary>
 
    [RfcField(AbapName = "VAR_SIZE_COMP_MEASURE_UNIT", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 467, Offset2 = 880)]
    [XmlElement("VAR_SIZE_COMP_MEASURE_UNIT", Form=XmlSchemaForm.Unqualified)]
    public string Var_Size_Comp_Measure_Unit
    { 
       get
       {
          return _Var_Size_Comp_Measure_Unit;
       }
       set
       {
          _Var_Size_Comp_Measure_Unit = value;
       }
    }
    private string _Var_Size_Comp_Measure_Unit;


    /// <summary>
    /// ISO code for unit of measurement
    /// </summary>
 
    [RfcField(AbapName = "VAR_SIZE_COMP_MEASURE_UNIT_ISO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 3, Length2 = 6, Offset = 470, Offset2 = 886)]
    [XmlElement("VAR_SIZE_COMP_MEASURE_UNIT_ISO", Form=XmlSchemaForm.Unqualified)]
    public string Var_Size_Comp_Measure_Unit_Iso
    { 
       get
       {
          return _Var_Size_Comp_Measure_Unit_Iso;
       }
       set
       {
          _Var_Size_Comp_Measure_Unit_Iso = value;
       }
    }
    private string _Var_Size_Comp_Measure_Unit_Iso;


    /// <summary>
    /// Account Number of Vendor or Creditor
    /// </summary>
 
    [RfcField(AbapName = "VENDOR_NO", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 473, Offset2 = 892)]
    [XmlElement("VENDOR_NO", Form=XmlSchemaForm.Unqualified)]
    public string Vendor_No
    { 
       get
       {
          return _Vendor_No;
       }
       set
       {
          _Vendor_No = value;
       }
    }
    private string _Vendor_No;


    /// <summary>
    /// WBS Element
    /// </summary>
 
    [RfcField(AbapName = "WBS_ELEMENT", RfcType = RFCTYPE.RFCTYPE_NUM, Length = 8, Length2 = 16, Offset = 483, Offset2 = 912)]
    [XmlElement("WBS_ELEMENT", Form=XmlSchemaForm.Unqualified)]
    public string Wbs_Element
    { 
       get
       {
          return _Wbs_Element;
       }
       set
       {
          _Wbs_Element = value;
       }
    }
    private string _Wbs_Element;


    /// <summary>
    /// Quantity withdrawn
    /// </summary>
 
    [RfcField(AbapName = "WITHD_QUAN", RfcType = RFCTYPE.RFCTYPE_BCD, Length = 7, Length2 = 7, Decimals = 3, Offset = 491, Offset2 = 928)]
    [XmlElement("WITHD_QUAN", Form=XmlSchemaForm.Unqualified)]
    public Decimal Withd_Quan
    { 
       get
       {
          return _Withd_Quan;
       }
       set
       {
          _Withd_Quan = value;
       }
    }
    private Decimal _Withd_Quan;


    /// <summary>
    /// Long Material Number for MATERIAL Field
    /// </summary>
 
    [RfcField(AbapName = "MATERIAL_EXTERNAL", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 40, Length2 = 80, Offset = 498, Offset2 = 936)]
    [XmlElement("MATERIAL_EXTERNAL", Form=XmlSchemaForm.Unqualified)]
    public string Material_External
    { 
       get
       {
          return _Material_External;
       }
       set
       {
          _Material_External = value;
       }
    }
    private string _Material_External;


    /// <summary>
    /// External GUID for MATERIAL Field
    /// </summary>
 
    [RfcField(AbapName = "MATERIAL_GUID", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 32, Length2 = 64, Offset = 538, Offset2 = 1016)]
    [XmlElement("MATERIAL_GUID", Form=XmlSchemaForm.Unqualified)]
    public string Material_Guid
    { 
       get
       {
          return _Material_Guid;
       }
       set
       {
          _Material_Guid = value;
       }
    }
    private string _Material_Guid;


    /// <summary>
    /// Version Number for MATERIAL Field
    /// </summary>
 
    [RfcField(AbapName = "MATERIAL_VERSION", RfcType = RFCTYPE.RFCTYPE_CHAR, Length = 10, Length2 = 20, Offset = 570, Offset2 = 1080)]
    [XmlElement("MATERIAL_VERSION", Form=XmlSchemaForm.Unqualified)]
    public string Material_Version
    { 
       get
       {
          return _Material_Version;
       }
       set
       {
          _Material_Version = value;
       }
    }
    private string _Material_Version;

  }

}
